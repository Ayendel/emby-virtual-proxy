emby-virtual-proxy/  # 整个项目的根目录
┣ 📂config/  # 存放应用核心配置文件的目录
┃ ┗ 📜config.json  # 核心配置文件，用于存储用户设置，如Emby地址、API密钥、虚拟库等
┣ 📂frontend/  # 所有前端相关代码（Vue.js管理面板）
┃ ┣ 📂src/  # 前端核心源码目录
┃ ┃ ┣ 📂api/  # API请求模块
┃ ┃ ┃ ┗ 📜index.js  # 定义了前端与后端FastAPI服务通信的Axios实例和所有API接口
┃ ┃ ┣ 📂assets/  # 静态资源目录
┃ ┃ ┃ ┗ 📜main.css  # 全局CSS样式文件
┃ ┃ ┣ 📂components/  # Vue.js的可复用组件
┃ ┃ ┃ ┣ 📜AdvancedFilterManager.vue  # 高级筛选器管理界面的组件
┃ ┃ ┃ ┣ 📜DisplayOrderManager.vue  # 主页媒体库显示顺序布局管理器的组件
┃ ┃ ┃ ┣ 📜LibraryEditDialog.vue  # 添加或编辑虚拟媒体库的对话框组件
┃ ┃ ┃ ┣ 📜SystemSettings.vue  # “系统设置”卡片的组件，用于配置Emby连接信息
┃ ┃ ┃ ┗ 📜VirtualLibraries.vue  # “虚拟媒体库管理”主界面的组件
┃ ┃ ┣ 📂stores/  # Pinia状态管理目录
┃ ┃ ┃ ┗ 📜main.js  # 全局状态管理（Store），负责处理所有前端数据和逻辑交互
┃ ┃ ┣ 📜App.vue  # Vue应用的根组件，是所有页面的入口
┃ ┃ ┗ 📜main.js  # 前端应用的主入口文件，负责初始化Vue、Pinia和ElementPlus
┃ ┣ 📜index.html  # 单页面应用的HTML模板文件
┃ ┣ 📜package.json  # 定义了前端项目的依赖库和运行脚本
┃ ┗ 📜vite.config.js  # 前端构建工具Vite的配置文件
┣ 📂src/  # 所有后端相关代码（Python服务）
┃ ┣ 📂config/  # (此目录为空)
┃ ┣ 📂proxy_handlers/  # 代理服务器的核心请求处理程序模块
┃ ┃ ┣ 📜handler_default.py  # 默认请求处理器，负责流式转发所有未被特殊处理的请求
┃ ┃ ┣ 📜handler_episodes.py  # 负责处理剧集“集”列表的合并逻辑
┃ ┃ ┣ 📜handler_items.py  # 【已优化】负责处理虚拟库内“项目”的请求，优先将筛选规则翻译为原生参数以实现高性能筛选
┃ ┃ ┣ 📜handler_latest.py  # 【已优化】通过翻译筛选规则，高效地处理虚拟库在首页“最近添加”的内容
┃ ┃ ┣ 📜handler_merger.py  # 提供核心的TMDB ID项目合并功能
┃ ┃ ┣ 📜handler_seasons.py  # 负责处理剧集“季”列表的合并逻辑
┃ ┃ ┣ 📜handler_system.py  # 负责拦截和修改/System/Info等系统级请求，重写URL
┃ ┃ ┣ 📜handler_views.py  # 负责拦截主页视图（/Users/{id}/Views），注入虚拟媒体库
┃ ┃ ┣ 📜_find_helper.py  # 辅助模块，用于检查一个项目是否属于启用了合并的虚拟库
┃ ┃ ┣ 📜_filter_translator.py # 【【【 新增核心优化模块 】】】 筛选规则翻译器，将高级筛选规则转换为Emby原生API查询参数
┃ ┃ ┗ 📜__init__.py  # 将此目录声明为Python包
┃ ┣ 📜admin_server.py  # 后台管理API服务器（FastAPI），为前端UI提供数据接口
┃ ┣ 📜config_manager.py  # 配置文件管理器，提供加载和保存config.json的功能
┃ ┣ 📜main.py  # 项目启动入口，可以通过命令行参数选择启动admin或proxy服务
┃ ┣ 📜minimal_proxy.py  # 一个极简的TCP代理脚本，可能用于早期开发或测试
┃ ┣ 📜models.py  # 定义了应用的数据模型（使用Pydantic），如AppConfig、VirtualLibrary等
┃ ┣ 📜proxy_cache.py  # 实现API响应缓存的模块（使用cachetools）
┃ ┣ 📜proxy_server.py  # 核心代理服务器（FastAPI），负责接收所有来自Emby客户端的请求并分发给各处理器
┃ ┗ 📜requirements.txt  # (文件内容未提供) 定义后端Python项目的依赖库
┣ 📜docker-compose - 副本.yml # docker-compose配置文件的一个备份
┣ 📜docker-compose-pro.yml  # 可能用于生产环境的docker-compose配置文件
┣ 📜docker-compose.yml  # 用于开发环境的主要docker-compose配置文件，编排admin和proxy服务
┣ 📜Dockerfile  # 用于构建项目Docker镜像的主要Dockerfile文件
┗ 📜Dockerfile - 副本  # Dockerfile的一个备份